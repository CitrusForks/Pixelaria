/*
    Pixelaria
    Copyright (C) 2013 Luiz Fernando Silva

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

    The full license may be found on the License.txt file attached to the
    base directory of this project.
*/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

using Pixelaria.Data;

namespace Pixelaria.Views.MiscViews
{
    /// <summary>
    /// Displays an interface where the user can choose the scaling method to apply to an Animation object when pasting frames
    /// </summary>
    public partial class FramesRescaleSettingsView : Form
    {
        /// <summary>
        /// The FrameSizeMatchingSettings generated by the user input on this form
        /// </summary>
        public FrameSizeMatchingSettings GeneratedSettings;

        /// <summary>
        /// Initializes a new instance of the FramesRescaleSettingsView class
        /// </summary>
        /// <param name="message">The message to display on the dialog's label</param>
        public FramesRescaleSettingsView(string message = "")
        {
            InitializeComponent();

            if (message == "")
            {
                lbl_message.Text = "Some of the frames being pasted don't have a resolution that matchis this animation's. Please select the scaling options for these frames:";
            }
        }

        // 
        // Ok button click event handler
        // 
        private void btn_ok_Click(object sender, EventArgs e)
        {
            // Animaiton resize method
            if (rb_animSize_keepOriginal.Checked)
            {
                GeneratedSettings.AnimationDimensionMatchMethod = AnimationDimensionMatchMethod.KeepOriginal;
            }
            else if (rb_animSize_useMaximumSize.Checked)
            {
                GeneratedSettings.AnimationDimensionMatchMethod = AnimationDimensionMatchMethod.UseLargestSize;
            }
            else if (rb_animSize_useNewSize.Checked)
            {
                GeneratedSettings.AnimationDimensionMatchMethod = AnimationDimensionMatchMethod.UseNewSize;
            }

            // Frame scaling method
            if (rb_frameScaling_placeAtTopLeft.Checked)
            {
                GeneratedSettings.PerFrameScalingMethod = PerFrameScalingMethod.PlaceAtTopLeft;
            }
            else if (rb_frameScaling_placeAtCenter.Checked)
            {
                GeneratedSettings.PerFrameScalingMethod = PerFrameScalingMethod.PlaceAtCenter;
            }
            else if (rb_frameScaling_stretch.Checked)
            {
                GeneratedSettings.PerFrameScalingMethod = PerFrameScalingMethod.Stretch;
            }

            // Drawing mode
            if (rb_drawingMode_lowQuality.Checked)
            {
                GeneratedSettings.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor;
            }
            else if (rb_drawingMode_highQuality.Checked)
            {
                GeneratedSettings.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
            }

            DialogResult = DialogResult.OK;

            this.Close();
        }
    }
}